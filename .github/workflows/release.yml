# Copyright 2024 EPAM Systems
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    branches:
      - main

    paths-ignore:
      - '.github/**'
      - README.md
      - CHANGELOG.md

  workflow_dispatch:

env:
  PODSPEC_FILE: ReportPortal.podspec
  PLIST_FILE: Sources/Info.plist
  CHANGE_LOG_FILE: CHANGELOG.md
  RELEASE_BRANCH: main
  DEVELOP_BRANCH: develop
  VERSION_EXTRACT_PATTERN: >-
    s.version\s*=\s*'([^']+)'
  PODSPEC_FILE_SEARCH_PATTERN: s.version(\s*)=(\s*)'[^']+
  PODSPEC_FILE_REPLACE_PATTERN: s.version\1=\2'
  PLIST_FILE_SEARCH_PATTERN: <key>CFBundleShortVersionString<\/key>(\s*)<string>[^<]+
  PLIST_FILE_REPLACE_PATTERN: <key>CFBundleShortVersionString<\/key>\1<string>

jobs:
  publish-pod:
    name: Publish pod
    runs-on: macOS-latest
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          tags: true
  
      - name: Setup git credentials
        uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          name: 'reportportal.io'
          email: 'support@reportportal.io'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate versions
        uses: HardNorth/github-version-generate@v1
        with:
          version-source: file
          version-file: ${{ env.PODSPEC_FILE }}
          version-file-extraction-pattern: ${{ env.VERSION_EXTRACT_PATTERN }}
  
      - name: Check if version already exists as a tag
        run: |
          if git tag --list | grep -qw "^${{ env.CURRENT_VERSION }}$"; then
            echo "This version tag already exists!"
            exit 1
          fi
      
      - name: Update CHANGELOG.md
        run: |
          sed -i '' -e "s/## \[Unreleased\]/## [${{ env.CURRENT_VERSION }}] - $(date +"%Y-%m-%d")/g" ${{ env.CHANGE_LOG_FILE }}
          sed -i '' '1 a\
          \
          ## [Unreleased]
          ' ${{ env.CHANGE_LOG_FILE }}
          git add ${{ env.CHANGE_LOG_FILE }}
          git commit -m "Changelog update"
          git push

      - name: Tagging new version
        id: newVersionTag
        run: |
          git tag -a ${{ env.CURRENT_VERSION }} -m "Release ${{ env.CURRENT_VERSION }}"
          git push --tags

      - name: Read changelog Entry
        id: readChangelogEntry
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ env.CURRENT_VERSION }}
          path: ./${{ env.CHANGE_LOG_FILE }}

      - name: Create Release
        id: createRelease
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.CURRENT_VERSION }}
          name: Release ${{ env.CURRENT_VERSION }}
          body: ${{ steps.readChangelogEntry.outputs.changes }}
          
      - name: Checkout develop branch
        if: ${{ github.ref == format('refs/heads/{0}', env.RELEASE_BRANCH) }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.DEVELOP_BRANCH }}
          fetch-depth: 0

      - name: Merge release branch into develop
        if: ${{ github.ref == format('refs/heads/{0}', env.RELEASE_BRANCH) }}
        run: |
          git merge -m 'Merge release branch into develop after a release' origin/${{ env.RELEASE_BRANCH }}
          git status | (! grep -Fq 'both modified:') || git status | grep -F 'both modified:' \
          | { echo -e 'Unable to merge release into develop, merge conflicts:'; (! grep -Eo '[^ ]+$') }
          git push origin ${{ env.DEVELOP_BRANCH }}

      - name: Setup build enviroment
        uses: ./.github/actions/setup-build-env
  
      - name: Publish to Cocoapods trunk
        run: |
          pod trunk push ${{ env.PODSPEC_FILE }} --allow-warnings
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
          POD_VERSION: ${{ env.CURRENT_VERSION }}

      - name: Update version file
        id: versionFileUpdate
        run: |
          sed -i '' "s/${{ env.PODSPEC_FILE_SEARCH_PATTERN }}/${{ env.PODSPEC_FILE_REPLACE_PATTERN }}${{ env.NEXT_VERSION }}/g" ${{ env.PODSPEC_FILE }}
          sed -i '' "s/${{ env.PLIST_FILE_SEARCH_PATTERN }}/${{ env.PLIST_FILE_REPLACE_PATTERN }}${{ env.NEXT_VERSION }}/g" ${{ env.PLIST_FILE }}
          git add ${{ env.PODSPEC_FILE }}
          git add ${{ env.PLIST_FILE }}

          git commit -m 'Version update'
          git push origin ${{ env.DEVELOP_BRANCH }}
